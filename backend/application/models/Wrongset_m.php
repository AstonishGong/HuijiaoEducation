<?php if (!defined('BASEPATH')) exit('No direct script access allowed');

class Wrongset_m extends MY_Model
{
    protected $_table_name = 'tbl_wrong_set';
    protected $_primary_key = 'id';
    protected $_primary_filter = 'intval';
    protected $_order_by = "id asc";

    function __construct()
    {
        parent::__construct();
    }

    public function getItems($student_id = 0)
    {
        $this->db->select('*, '
            . $this->_table_name . '.id as id, '
            . $this->_table_name . '.update_time as update_time, '
            . $this->_table_name . '.create_time as create_time, '
            . $this->_table_name . '.question_no as question_no')
            ->from($this->_table_name)
            ->join('tbl_huijiao_course_type', $this->_table_name . '.course_type_id = tbl_huijiao_course_type.id', 'inner')
            ->join('tbl_huijiao_terms', 'tbl_huijiao_course_type.term_id = tbl_huijiao_terms.id', 'inner')
            ->join('tbl_huijiao_subject', 'tbl_huijiao_terms.subject_id = tbl_huijiao_subject.id', 'inner')
            ->where($this->_table_name . '.student_id', $student_id);
        $query = $this->db->get();
        return $query->result();
    }

    function getProblemSet($problem_ids){
        if(count($problem_ids)==0) return array();
        $this->db->select('*');
        $this->db->from($this->_table_name);
        foreach($problem_ids as $item){
            $this->db->or_where('id',$item);
        }
        $query = $this->db->get();
        return $query->result();
    }

    function get_all()
    {
        $query = $this->db->get($this->_table_name);
        return $query->result();
    }

    function add($arr)
    {
        $this->db->insert($this->_table_name, $arr);
        return $this->db->insert_id();
    }

    function get_single($arr = array())
    {
        $array = array();
        foreach ($arr as $key => $value) {
            $array[$this->_table_name . '.' . $key] = $value;
        }
        $this->db->select($this->_table_name . '.*');
        $this->db->select('tbl_huijiao_course_type.title as course_type, tbl_huijiao_course_type.icon_path as icon_path');
        $this->db->select('tbl_huijiao_course_type.icon_path_m as icon_path_m')
            ->from($this->_table_name)
            ->join('tbl_huijiao_course_type', $this->_table_name . '.course_type_id = tbl_huijiao_course_type.id', 'left');
        $this->db->where($array);
        $query = $this->db->get();
        $contents = $query->row();
        return $query->row();
    }

    public function get_where($array = NULL, $subCondition = NULL)
    {
        $this->db->select($this->_table_name . '.*');
        $this->db->select('tbl_huijiao_course_type.title as course_type, tbl_huijiao_course_type.icon_path as icon_path');
        $this->db->select('tbl_huijiao_course_type.icon_path_m as icon_path_m')
            ->from($this->_table_name)
            ->join('tbl_huijiao_course_type', $this->_table_name . '.course_type_id = tbl_huijiao_course_type.id', 'left');
        $this->db->where($array);
        $query = $this->db->get();
        return $query->result(); // TODO: Change the autogenerated stub
    }

    public function delete($item_id)
    {
        $this->db->where($this->_primary_key, $item_id);
        $this->db->delete($this->_table_name);
        return $this->getItems();
    }

    public function publish($item_id, $publish_st)
    {
        $this->db->set('status', $publish_st);
        $this->db->where($this->_primary_key, $item_id);
        $this->db->update($this->_table_name);
        return $this->getItems();
    }

    function edit($arr, $item_id)
    {
        $this->db->set($arr);
        $this->db->where($this->_primary_key, $item_id);
        $this->db->update($this->_table_name);
        return $this->getItems();
    }
}
